provider "google" {
  # Replace with your project ID
  project = "your-project-id"
  region  = "us-central1"
  zone    = "us-central1-a"
}

# Create a VM instance
resource "google_compute_instance" "lamp_vm" {
  name         = "lamp-1-vm"
  machine_type = "e2-medium"
  tags         = ["http-server"]

  boot_disk {
    initialize_params {
      image = "debian-cloud/debian-12"
      size  = 10
    }
  }

  network_interface {
    network = "default"
    access_config {
      // Ephemeral public IP
    }
  }

  metadata_startup_script = file("install-lamp-monitoring.sh")

  service_account {
    scopes = [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/logging.write",
      "https://www.googleapis.com/auth/monitoring.write",
    ]
  }
}

# Create firewall rule to allow HTTP traffic
resource "google_compute_firewall" "allow_http" {
  name    = "allow-http"
  network = "default"

  allow {
    protocol = "tcp"
    ports    = ["80"]
  }

  source_ranges = ["0.0.0.0/0"]
  target_tags   = ["http-server"]
}

# Create uptime check
resource "google_monitoring_uptime_check_config" "lamp_uptime_check" {
  display_name = "Lamp Uptime Check"
  timeout      = "10s"
  period       = "60s"

  http_check {
    path         = "/"
    port         = "80"
    use_ssl      = false
    validate_ssl = false
  }

  monitored_resource {
    type = "gce_instance"
    labels = {
      instance_id = google_compute_instance.lamp_vm.instance_id
      zone        = google_compute_instance.lamp_vm.zone
    }
  }
}

# Create alert policy
resource "google_monitoring_alert_policy" "inbound_traffic_alert" {
  display_name = "Inbound Traffic Alert"
  combiner     = "OR"
  conditions {
    display_name = "VM Network Traffic Threshold"
    condition_threshold {
      filter          = "resource.type = \"gce_instance\" AND resource.labels.instance_id = \"${google_compute_instance.lamp_vm.instance_id}\" AND metric.type = \"agent.googleapis.com/interface/traffic\""
      duration        = "60s"
      comparison      = "COMPARISON_GT"
      threshold_value = 500
      trigger {
        count = 1
      }
      aggregations {
        alignment_period   = "60s"
        per_series_aligner = "ALIGN_RATE"
      }
    }
  }

  notification_channels = [
    # Replace with your notification channel ID
    # "projects/your-project-id/notificationChannels/1234567890"
  ]
}

# Create dashboard
resource "google_monitoring_dashboard" "lamp_dashboard" {
  dashboard_json = <<EOF
{
  "displayName": "Cloud Monitoring LAMP Qwik Start Dashboard",
  "gridLayout": {
    "widgets": [
      {
        "title": "CPU Load",
        "xyChart": {
          "dataSets": [
            {
              "timeSeriesQuery": {
                "timeSeriesFilter": {
                  "filter": "resource.type = \"gce_instance\" AND resource.labels.instance_id = \"${google_compute_instance.lamp_vm.instance_id}\" AND metric.type = \"compute.googleapis.com/instance/cpu/load_1m\"",
                  "aggregation": {
                    "alignmentPeriod": "60s",
                    "perSeriesAligner": "ALIGN_MEAN"
                  }
                }
              }
            }
          ],
          "timeshiftDuration": "0s",
          "yAxis": {
            "label": "y1Axis",
            "scale": "LINEAR"
          }
        }
      },
      {
        "title": "Received Packets",
        "xyChart": {
          "dataSets": [
            {
              "timeSeriesQuery": {
                "timeSeriesFilter": {
                  "filter": "resource.type = \"gce_instance\" AND resource.labels.instance_id = \"${google_compute_instance.lamp_vm.instance_id}\" AND metric.type = \"compute.googleapis.com/instance/network/received_packets_count\"",
                  "aggregation": {
                    "alignmentPeriod": "60s",
                    "perSeriesAligner": "ALIGN_RATE"
                  }
                }
              }
            }
          ],
          "timeshiftDuration": "0s",
          "yAxis": {
            "label": "y1Axis",
            "scale": "LINEAR"
          }
        }
      }
    ]
  }
}
EOF
}

# Output variables
output "vm_external_ip" {
  value = google_compute_instance.lamp_vm.network_interface[0].access_config[0].nat_ip
}

output "uptime_check_url" {
  value = "http://${google_compute_instance.lamp_vm.network_interface[0].access_config[0].nat_ip}/"
}
